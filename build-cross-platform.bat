@echo off
REM build-cross-platform.bat - Script de Windows para compilar Kakebo multiplataforma

echo üöÄ Compilando Kakebo para m√∫ltiples plataformas...

set PROJECT_DIR=KakeboApp
set OUTPUT_DIR=releases
set VERSION=1.0.0

REM Crear directorio de releases
if not exist %OUTPUT_DIR% mkdir %OUTPUT_DIR%

REM Limpiar builds anteriores
echo üßπ Limpiando builds anteriores...
dotnet clean

REM Restaurar dependencias
echo üì¶ Restaurando dependencias...
dotnet restore

REM Funci√≥n para compilar (usando call)
echo üéØ Compilando versiones de escritorio...

REM Windows x64
echo üî® Compilando para Windows x64...
dotnet publish %PROJECT_DIR% -c Release -r win-x64 --self-contained true -p:PublishSingleFile=false -p:IncludeNativeLibrariesForSelfExtract=true -o %OUTPUT_DIR%\Windows-x64
echo ‚úÖ Windows x64 compilado exitosamente

REM Windows ARM64
echo üî® Compilando para Windows ARM64...
dotnet publish %PROJECT_DIR% -c Release -r win-arm64 --self-contained true -p:PublishSingleFile=false -p:IncludeNativeLibrariesForSelfExtract=true -o %OUTPUT_DIR%\Windows-ARM64
echo ‚úÖ Windows ARM64 compilado exitosamente

REM Linux x64
echo üî® Compilando para Linux x64...
dotnet publish %PROJECT_DIR% -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=false -p:IncludeNativeLibrariesForSelfExtract=true -o %OUTPUT_DIR%\Linux-x64
echo ‚úÖ Linux x64 compilado exitosamente

REM Linux ARM64
echo üî® Compilando para Linux ARM64...
dotnet publish %PROJECT_DIR% -c Release -r linux-arm64 --self-contained true -p:PublishSingleFile=false -p:IncludeNativeLibrariesForSelfExtract=true -o %OUTPUT_DIR%\Linux-ARM64
echo ‚úÖ Linux ARM64 compilado exitosamente

REM macOS Intel
echo üî® Compilando para macOS Intel...
dotnet publish %PROJECT_DIR% -c Release -r osx-x64 --self-contained true -p:PublishSingleFile=false -p:IncludeNativeLibrariesForSelfExtract=true -o %OUTPUT_DIR%\macOS-Intel
echo ‚úÖ macOS Intel compilado exitosamente

REM macOS Apple Silicon
echo üî® Compilando para macOS Apple Silicon...
dotnet publish %PROJECT_DIR% -c Release -r osx-arm64 --self-contained true -p:PublishSingleFile=false -p:IncludeNativeLibrariesForSelfExtract=true -o %OUTPUT_DIR%\macOS-AppleSilicon
echo ‚úÖ macOS Apple Silicon compilado exitosamente

echo.
echo üéâ ¬°Compilaci√≥n multiplataforma completada!
echo üìÅ Los binarios est√°n en: %OUTPUT_DIR%\
echo.
echo Plataformas disponibles:
echo   - Windows x64 (Intel/AMD)
echo   - Windows ARM64 (Surface, Qualcomm)
echo   - Linux x64 (Ubuntu, Fedora, etc.)
echo   - Linux ARM64 (Raspberry Pi, etc.)
echo   - macOS Intel
echo   - macOS Apple Silicon (M1/M2/M3)
echo.
echo Para ejecutar:
echo   Windows: KakeboApp.exe
echo   Linux/macOS: ./KakeboApp

pause
